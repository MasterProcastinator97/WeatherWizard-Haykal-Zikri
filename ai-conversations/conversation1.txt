Conversation Title: Choosing the API and Securing the Key

Date: October 15, 2025

Summary: This conversation documents the strategic decision to use the OpenWeatherMap API to meet the assignment's 'Extension Option'. It also shows intentional prompting to find the best practice for API key management in Google Colab, leading to the use of Colab Secrets.

AI: Gemini

Me:
"For my 'Weather Advisor' project, I need to get weather data. I have three options: a basic fetch-my-weather package, calling the wttr.in API directly, or using a full commercial API like OpenWeatherMap that requires key management. Could you help me compare these options based on implementation difficulty and how well each would demonstrate the advanced requirements of my assignment?"

AI:
That's a great way to start. Let's break down the trade-offs:

fetch-my-weather: Easiest to implement, but abstracts away the API details. Good for core requirements, but not for the extension.

wttr.in API: A good middle ground. You'd handle the HTTP requests and JSON parsing yourself, showing more skill.

OpenWeatherMap API: Most complex, but also the best for the 'Extension Option'. It requires you to manage an API key securely and process a more detailed, real-world data structure. This would strongly demonstrate advanced skills.

Me:
"that confirms my plan. I'll go with the OpenWeatherMap API. What is the most secure and persistent way to handle an API key in a Google Colab notebook? I was thinking of using getpass, but I don't want to re-enter it every time I open the notebook."

AI:
You're right to think beyond getpass for persistence. The best practice in the Colab environment is to use the built-in Secrets Manager. It securely stores your key and makes it accessible to your notebook across sessions without exposing it in your code. Here's how you would modify your setup to use it.

BEFORE (Using getpass):

import os
import getpass

if 'OPENWEATHER_API_KEY' not in os.environ:
    api_key = getpass.getpass('Enter your OpenWeatherMap API key: ')
    os.environ['OPENWEATHER_API_KEY'] = api_key


AFTER (Using Colab Secrets - Best Practice):

# Setting up the OpenWeathermap API key using Colab Secrets
from google.colab import userdata
import os

# Access the API key from Colab Secrets (stored using the ðŸ”‘ icon)
api_key = userdata.get('OPENWEATHER_API_KEY')

# Set it as an environment variable for the rest of the script
if api_key:
    os.environ['OPENWEATHER_API_KEY'] = api_key
else:
    print("API Key not found in Colab Secrets. Please add it.")
c
